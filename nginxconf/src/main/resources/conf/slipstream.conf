
# This server(s) below proxies the local SlipStream service (running on a
# local port on HTTP).  All of the SSL security configuration is
# handled by nginx.

# Location of the cache on disk. It should exist and be writable by nginx user.
proxy_cache_path /var/local/slipstream/nginx/cache keys_zone=zone_one:10m;

# For 'slipstream-extra/limit-reports.block'
map $request_method $reports_limit_key {
    default         "";
    PUT             "True";
}
limit_conn_zone $reports_limit_key zone=reportslimit:100k;

# For 'slipstream-extra/limits.block'
map $request_method $limit_complete_post_uri {
    POST            $uri;
}
map $limit_complete_post_uri $limit_complete_post_key {
    "~*^/run/(?P<runid>[^/]+)/.*:complete$" $runid;
}
map $request_method $limit_abort_put_uri {
    PUT             $uri;
}
map $limit_abort_put_uri $limit_abort_put_key {
    "~*^/run/(?P<runid>[^/]+)/.*:abort$" $runid;
}
limit_conn_zone $limit_abort_put_key zone=abortputlimit:2m;
limit_conn_zone $binary_remote_addr zone=connperclientlimit:10m;
limit_conn_zone $server_name zone=connperserverlimit:500k;
limit_req_zone $binary_remote_addr zone=rateperclientlimit:10m rate=20r/s;
limit_req_zone $server_name zone=rateperserverlimit:500k rate=50r/s;
limit_req_zone $limit_complete_post_key zone=completerateperdeployment:2m rate=10r/m;

map $http_accept $type {
    include      conf.d/slipstream-extra/http_accept-type.map;
}

map $remote_addr $maintenance {
    include      conf.d/slipstream-extra/maintenance.map;
}

upstream slipstream_servers {
    server 127.0.0.1:8182;

    keepalive 50;
}

upstream ssclj_servers {
    server 127.0.0.1:8201;

    keepalive 50;
}

upstream prs_servers {
    server 127.0.0.1:8203;

    keepalive 50;
}

charset utf-8;

server_tokens off;

# Include SSL related configuration parameters
include conf.d/slipstream-ssl.params;

# Include files with server block to customize the way to reach SlipStream
include conf.d/slipstream-servers/*.server;


